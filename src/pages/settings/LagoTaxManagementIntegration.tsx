import { gql } from '@apollo/client'
import { Avatar, tw } from 'lago-design-system'
import { FC, useRef } from 'react'
import { generatePath, useNavigate } from 'react-router-dom'

import {
  Button,
  ButtonLink,
  Chip,
  DialogRef,
  Icon,
  Skeleton,
  Typography,
} from '~/components/designSystem'
import { IntegrationsPage } from '~/components/layouts/Integrations'
import {
  AddLagoTaxManagementDialog,
  AddLagoTaxManagementDialogRef,
} from '~/components/settings/integrations/AddLagoTaxManagementDialog'
import { WarningDialog } from '~/components/WarningDialog'
import { addToast } from '~/core/apolloClient'
import { CountryCodes } from '~/core/constants/countryCodes'
import { IntegrationsTabsOptionsEnum } from '~/core/constants/tabsOptions'
import { intlFormatNumber } from '~/core/formats/intlFormatNumber'
import { INTEGRATIONS_ROUTE, TAXES_SETTINGS_ROUTE } from '~/core/router'
import {
  useGetBillingEntitiesQuery,
  useGetTaxesForTaxManagementIntegrationDetailsPageQuery,
  useUpdateBillingEntityMutation,
} from '~/generated/graphql'
import { useInternationalization } from '~/hooks/core/useInternationalization'
import { usePermissions } from '~/hooks/usePermissions'
import LagoTaxManagement from '~/public/images/lago-tax-management.svg'
import { PageHeader } from '~/styles'

gql`
  query getTaxesForTaxManagementIntegrationDetailsPage {
    taxes(page: 1, limit: 1000, order: "rate", autoGenerated: true) {
      collection {
        id
        code
        name
        rate
      }
    }
  }
`

const TaxItem: FC<{ name: string; code: string; rate: number }> = ({ name, code, rate }) => {
  const { translate } = useInternationalization()

  return (
    <div className="flex min-h-18 flex-row items-center justify-between gap-3 py-2 shadow-b">
      <div className="flex flex-1 items-center gap-3">
        <Avatar size="big" variant="connector">
          <Icon size="medium" name="percentage" color="dark" />
        </Avatar>
        <div>
          <Typography color="textSecondary" variant="bodyHl" noWrap>
            {name}
          </Typography>
          <Typography variant="caption" noWrap>
            {code}
          </Typography>
        </div>
      </div>
      <Chip className="ml-auto" label={translate('text_657078c28394d6b1ae1b9755')} />
      <Typography variant="body" className="basis-16" color="grey700" align="right">
        {intlFormatNumber(rate / 100, {
          style: 'percent',
        })}
      </Typography>
    </div>
  )
}

const LagoTaxManagementIntegration = () => {
  const navigate = useNavigate()
  const { translate } = useInternationalization()
  const { hasPermissions } = usePermissions()
  const deleteConnectionRef = useRef<DialogRef>(null)
  const addLagoTaxManagementDialog = useRef<AddLagoTaxManagementDialogRef>(null)

  const { data: billingEntitiesData, loading: billingEntitiesLoading } =
    useGetBillingEntitiesQuery()

  const { data: taxesData, loading: taxesLoading } =
    useGetTaxesForTaxManagementIntegrationDetailsPageQuery()

  const [update] = useUpdateBillingEntityMutation()

  const removeEuTaxManagement = async () => {
    const entities = billingEntitiesData?.billingEntities?.collection || []

    await Promise.all(
      entities.map((billingEntity) => {
        return update({
          variables: {
            input: {
              id: billingEntity.id as string,
              euTaxManagement: false,
            },
          },
        })
      }),
    )

    navigate(
      generatePath(INTEGRATIONS_ROUTE, {
        integrationGroup: IntegrationsTabsOptionsEnum.Lago,
      }),
    )

    addToast({
      message: translate('text_657078c28394d6b1ae1b981d'),
      severity: 'success',
    })
  }

  const loading = billingEntitiesLoading || taxesLoading

  const hasConnectedBillingEntities = billingEntitiesData?.billingEntities?.collection?.find(
    (billingEntity) => billingEntity?.euTaxManagement,
  )

  return (
    <>
      <PageHeader.Wrapper withSide>
        <PageHeader.Group>
          <ButtonLink
            to={generatePath(INTEGRATIONS_ROUTE, {
              integrationGroup: IntegrationsTabsOptionsEnum.Lago,
            })}
            type="button"
            buttonProps={{ variant: 'quaternary', icon: 'arrow-left' }}
          />
          {loading ? (
            <Skeleton variant="text" className="w-30" />
          ) : (
            <Typography variant="bodyHl" color="textSecondary">
              {translate('text_657078c28394d6b1ae1b9713')}
            </Typography>
          )}
        </PageHeader.Group>
        {hasPermissions(['billingEntitiesTaxesUpdate']) && (
          <Button
            variant="secondary"
            disabled={loading}
            onClick={deleteConnectionRef.current?.openDialog}
          >
            {translate('text_657078c28394d6b1ae1b971b')}
          </Button>
        )}
      </PageHeader.Wrapper>

      <IntegrationsPage.Header
        isLoading={loading}
        integrationLogo={<LagoTaxManagement />}
        integrationName={translate('text_657078c28394d6b1ae1b9713')}
        integrationChip={
          hasConnectedBillingEntities ? translate('text_62b1edddbf5f461ab97127ad') : undefined
        }
        integrationDescription={translate('text_657078c28394d6b1ae1b971f')}
      />

      <IntegrationsPage.Container>
        <section>
          <IntegrationsPage.Headline
            label={translate('text_657078c28394d6b1ae1b9725')}
            description={translate('text_1746697495328feu6uz9q6oo')}
          >
            <Button
              variant="quaternary"
              onClick={() => {
                addLagoTaxManagementDialog.current?.openDialog()
              }}
            >
              {translate('text_174669693169993cmj3546tp')}
            </Button>
          </IntegrationsPage.Headline>

          {loading && <IntegrationsPage.ItemSkeleton />}

          {!loading && (
            <>
              <div className="flex items-center justify-between py-3 shadow-b">
                <Typography className="text-sm font-medium text-grey-600">
                  {translate('text_17430772961896bgqutmnx7g')}
                </Typography>

                <Typography className="text-sm font-medium text-grey-600">
                  {translate('text_62ab2d0396dd6b0361614da0')}
                </Typography>
              </div>

              {billingEntitiesData?.billingEntities?.collection
                ?.filter((billingEntity) => billingEntity.euTaxManagement === true)
                .map((billingEntity, index) => (
                  <div
                    className={tw('flex items-center justify-between py-3', {
                      'shadow-b':
                        index !== billingEntitiesData?.billingEntities?.collection?.length - 1,
                    })}
                    key={`lago-tax-management-${billingEntity.id}`}
                  >
                    <div className="flex items-center gap-3">
                      <Icon name="company" size="small" />

                      <Typography className="text-grey-700">
                        {billingEntity?.name || billingEntity?.code}
                      </Typography>
                    </div>

                    <Typography className="text-grey-700">
                      {billingEntity?.country && CountryCodes[billingEntity?.country]}
                    </Typography>
                  </div>
                ))}
            </>
          )}
        </section>

        <section>
          <IntegrationsPage.Headline label={translate('text_657078c28394d6b1ae1b9743')}>
            {hasPermissions(['billingEntitiesTaxesView']) && (
              <Button
                variant="quaternary"
                disabled={loading}
                onClick={() => {
                  navigate(TAXES_SETTINGS_ROUTE)
                }}
              >
                {translate('text_657078c28394d6b1ae1b973d')}
              </Button>
            )}
          </IntegrationsPage.Headline>

          {loading && <IntegrationsPage.ItemSkeleton />}
          {!loading &&
            taxesData?.taxes?.collection.map((tax) => (
              <TaxItem key={tax.id} name={tax.name} code={tax.code} rate={tax.rate} />
            ))}
        </section>
      </IntegrationsPage.Container>

      <AddLagoTaxManagementDialog isUpdate={true} ref={addLagoTaxManagementDialog} />

      <WarningDialog
        ref={deleteConnectionRef}
        title={translate('text_657078c28394d6b1ae1b9707')}
        description={translate('text_657078c28394d6b1ae1b970d')}
        continueText={translate('text_657078c28394d6b1ae1b971b')}
        onContinue={removeEuTaxManagement}
      />
    </>
  )
}

export default LagoTaxManagementIntegration
