import { gql } from '@apollo/client'
import { Stack } from '@mui/material'
import { useRef } from 'react'
import { useNavigate } from 'react-router-dom'
import styled from 'styled-components'

import {
  Avatar,
  Button,
  ButtonLink,
  Chip,
  DialogRef,
  Icon,
  Skeleton,
  Typography,
} from '~/components/designSystem'
import { WarningDialog } from '~/components/WarningDialog'
import { addToast } from '~/core/apolloClient'
import { CountryCodes } from '~/core/constants/countryCodes'
import { intlFormatNumber } from '~/core/formats/intlFormatNumber'
import {
  INTEGRATIONS_ROUTE,
  ORGANIZATION_INFORMATIONS_ROUTE,
  TAXES_SETTINGS_ROUTE,
} from '~/core/router'
import {
  GocardlessForCreateAndEditSuccessRedirectUrlFragmentDoc,
  useGetTaxesForTaxManagementIntegrationDetailsPageQuery,
  useLagoTaxManagementIntegrationsSettingQuery,
  useRemoveTaxManagementIntegrationMutation,
} from '~/generated/graphql'
import { useInternationalization } from '~/hooks/core/useInternationalization'
import LagoTaxManagement from '~/public/images/lago-tax-management.svg'
import { HEADER_TABLE_HEIGHT, NAV_HEIGHT, PageHeader, theme } from '~/styles'

gql`
  query lagoTaxManagementIntegrationsSetting {
    organization {
      id
      country
      euTaxManagement
    }
  }

  query getTaxesForTaxManagementIntegrationDetailsPage {
    taxes(page: 1, limit: 1000, order: "rate", autoGenerated: true) {
      collection {
        id
        code
        name
        rate
      }
    }
  }

  mutation removeTaxManagementIntegration($input: UpdateOrganizationInput!) {
    updateOrganization(input: $input) {
      id
      euTaxManagement
    }
  }

  ${GocardlessForCreateAndEditSuccessRedirectUrlFragmentDoc}
`

const LagoTaxManagementIntegration = () => {
  const navigate = useNavigate()
  const { translate } = useInternationalization()
  const deleteConnectionRef = useRef<DialogRef>(null)

  const { data: organizationData, loading: organizationLoading } =
    useLagoTaxManagementIntegrationsSettingQuery()
  const { data: taxesData, loading: taxesLoading } =
    useGetTaxesForTaxManagementIntegrationDetailsPageQuery()

  const [deleteConnexion] = useRemoveTaxManagementIntegrationMutation({
    onCompleted({ updateOrganization }) {
      if (updateOrganization) {
        addToast({
          message: translate('text_657078c28394d6b1ae1b981d'),
          severity: 'success',
        })
      }
    },
  })

  const organization = organizationData?.organization
  const isConnectionEstablished = organization?.euTaxManagement
  const loading = organizationLoading || taxesLoading

  return (
    <>
      <PageHeader $withSide>
        <HeaderBlock>
          <ButtonLink
            to={INTEGRATIONS_ROUTE}
            type="button"
            buttonProps={{ variant: 'quaternary', icon: 'arrow-left' }}
          />
          {loading ? (
            <Skeleton variant="text" height={12} width={120} />
          ) : (
            <Typography variant="bodyHl" color="textSecondary">
              {translate('text_657078c28394d6b1ae1b9713')}
            </Typography>
          )}
        </HeaderBlock>
        <Button
          variant="secondary"
          disabled={loading}
          onClick={deleteConnectionRef.current?.openDialog}
        >
          {translate('text_657078c28394d6b1ae1b971b')}
        </Button>
      </PageHeader>
      <MainInfos>
        {loading ? (
          <>
            <Skeleton variant="connectorAvatar" size="large" marginRight="16px" />
            <div>
              <Skeleton variant="text" width={200} height={12} marginBottom="22px" />
              <Skeleton variant="text" width={128} height={12} />
            </div>
          </>
        ) : (
          <>
            <StyledAvatar variant="connector" size="large">
              <LagoTaxManagement />
            </StyledAvatar>
            <Stack spacing={1}>
              <Line>
                <Typography variant="headline">
                  {translate('text_657078c28394d6b1ae1b9713')}
                </Typography>
                {isConnectionEstablished && (
                  <Chip label={translate('text_62b1edddbf5f461ab97127ad')} />
                )}
              </Line>
              <Typography>{translate('text_657078c28394d6b1ae1b971f')}</Typography>
            </Stack>
          </>
        )}
      </MainInfos>

      <ContentWrapper>
        <section>
          <Title variant="subhead">{translate('text_657078c28394d6b1ae1b9725')}</Title>
          <ConnectionDetailsItem>
            {loading ? (
              <>
                <Skeleton variant="connectorAvatar" size="big" marginRight="16px" />
                <Skeleton variant="text" width={240} height={12} />
              </>
            ) : (
              <>
                <Avatar variant="connector" size="big">
                  <Icon color="dark" name="globe" />
                </Avatar>
                <Stack>
                  <Typography variant="caption" noWrap>
                    {translate('text_657078c28394d6b1ae1b9765')}
                  </Typography>
                  <Typography variant="body" color="grey700" noWrap>
                    {!!organization?.country && CountryCodes[organization?.country]}
                  </Typography>
                </Stack>
              </>
            )}
          </ConnectionDetailsItem>
          {!loading && (
            <Info
              variant="caption"
              html={translate('text_657078c28394d6b1ae1b9737', {
                href: ORGANIZATION_INFORMATIONS_ROUTE,
              })}
            />
          )}
        </section>

        <section>
          <InlineTitle>
            <Typography variant="subhead">{translate('text_657078c28394d6b1ae1b9743')}</Typography>
            <Button
              variant="quaternary"
              disabled={loading}
              onClick={() => {
                navigate(TAXES_SETTINGS_ROUTE)
              }}
            >
              {translate('text_657078c28394d6b1ae1b973d')}
            </Button>
          </InlineTitle>

          {loading ? (
            <HeaderBlock>
              <Skeleton variant="connectorAvatar" size="big" marginRight="16px" />
              <Skeleton variant="text" width={240} height={12} />
            </HeaderBlock>
          ) : (
            <>
              {taxesData?.taxes?.collection.map((tax) => (
                <TaxItemWrapper key={tax.id}>
                  <Avatar size="big" variant="connector">
                    <Icon size="medium" name="percentage" color="dark" />
                  </Avatar>
                  <Stack>
                    <Typography color="textSecondary" variant="bodyHl" noWrap>
                      {tax.name}
                    </Typography>
                    <Typography variant="caption" noWrap>
                      {tax.code}
                    </Typography>
                  </Stack>
                  <Chip label={translate('text_657078c28394d6b1ae1b9755')} />
                  <Typography variant="body" color="grey700" align="right">
                    {intlFormatNumber(tax.rate / 100, {
                      minimumFractionDigits: 2,
                      style: 'percent',
                    })}
                  </Typography>
                </TaxItemWrapper>
              ))}
            </>
          )}
        </section>
      </ContentWrapper>

      <WarningDialog
        ref={deleteConnectionRef}
        title={translate('text_657078c28394d6b1ae1b9707')}
        description={translate('text_657078c28394d6b1ae1b970d')}
        continueText={translate('text_657078c28394d6b1ae1b971b')}
        onContinue={async () => {
          await deleteConnexion({
            variables: {
              input: {
                euTaxManagement: false,
              },
            },
          })

          navigate(INTEGRATIONS_ROUTE)
        }}
      />
    </>
  )
}

const HeaderBlock = styled.div`
  display: flex;
  align-items: center;

  > *:first-childÂ  {
    margin-right: ${theme.spacing(3)};
  }
`

const MainInfos = styled.div`
  display: flex;
  align-items: center;
  padding: ${theme.spacing(8)} ${theme.spacing(12)};
`

const ContentWrapper = styled.div`
  max-width: ${theme.spacing(168)};
  margin: 0 ${theme.spacing(12)} ${theme.spacing(12)};
  display: flex;
  flex-direction: column;
  gap: ${theme.spacing(8)};
`

const Title = styled(Typography)`
  height: ${NAV_HEIGHT}px;
  width: 100%;
  display: flex;
  align-items: center;
`

const ConnectionDetailsItem = styled.div`
  height: ${NAV_HEIGHT}px;
  max-width: ${theme.spacing(168)};
  box-shadow: ${theme.shadows[7]};
  display: flex;
  align-items: center;

  > *:first-child {
    margin-right: ${theme.spacing(3)};
  }
`

const Info = styled(Typography)`
  height: ${HEADER_TABLE_HEIGHT}px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
`

const StyledAvatar = styled(Avatar)`
  margin-right: ${theme.spacing(4)};
`

const Line = styled.div`
  display: flex;
  align-items: center;

  > *:first-child {
    margin-right: ${theme.spacing(2)};
  }
`

const InlineTitle = styled.div`
  position: relative;
  height: ${NAV_HEIGHT}px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
`

const TaxItemWrapper = styled.div`
  height: ${NAV_HEIGHT}px;
  display: grid;
  align-items: center;
  grid-template-columns: 40px 1fr 91px 80px;
  column-gap: ${theme.spacing(3)};
  box-shadow: ${theme.shadows[7]};
`

export default LagoTaxManagementIntegration
